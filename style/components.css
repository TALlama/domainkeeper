@layer components {
  :root {
    --color-selected-bg: hsl(120, 90%, 90%);

    --color-leadership-bg: orange;
    --color-civic-bg: lightblue;
    --color-event-bg: red;

    --color-critical-success-bg: lch(65% 55 150);
    --color-success-bg: lch(86% 55 190);
    --color-failure-bg: lch(65% 55 0);
    --color-critical-failure-bg: lch(65% 55 300);

    --header-bg: black;
    --subheader-bg: lightgrey;
  }

  domain-sheet {
    position: sticky;
    top: 0;
    padding-top: 0;
    max-height: 100vh;
    overflow: hidden;

    @media screen {
      border-right: 3px solid black;
    }

    .domain-header {
      display: flex;

      .domain-data-management {
        margin-left: auto;
      }
    }

    h3, h4, h5, h6 {
      display: flex;
      background: var(--header-bg);
      border-bottom: 1px solid var(--header-bg);
      padding: var(--internal-margin);
      margin: var(--internal-margin) 0 0;
      font-size: var(--step--1);

      .badge {
        margin-left: auto;
      }
    }

    h3, h4, h5 {
      color: white;
    }

    h6 {
      --header-bg: hsl(0, 0%, 90%);
    }

    h3 {
      margin-top: 0;
    }

    .abilities, .stats {
      font-size: var(--step-1);
    }

    .stats {
      border-top: 1px solid black;
    }

    .abilities .ability, .stats .stat {
      display: grid;
      grid-template-columns: 4ch 1fr auto;
      padding-inline-end: var(--internal-margin);

      label { grid-column: 2; }
    }

    .ability-roll {
      margin-right: var(--external-margin);
    }

    .actors {
      li {
        display: flex;
        align-items: baseline;
        gap: var(--internal-margin);
        padding: var(--small-margin);

        &.current {
          font-weight: 600;
          background: var(--color-selected-bg);
        }

        .badge {
          margin-left: auto;
        }

        & + li {
          border-top: 1px solid black;
        }
      }
    }

    input[type="number"] {
      max-width: 5em;
      text-align: end;
      font-size: var(--step-0);
      border: none;
    }
  }

  @media (width < 1250px) {
    domain-sheet .abilities {
      label { display: inline-grid; margin-bottom: var(--external-margin) }
    }
  }

  @media print {
    .ability-roll {
      display: none;
    }

    input {
      border: none;
      width: 2em;
    }

    domain-sheet {
      .abilities, .stats, .leaders, .settlements {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        gap: var(--external-margin);
        margin-bottom: 0;
        padding: 0;
      }

      input[type="number"] {
        text-align: start;

        &::-webkit-inner-spin-button, &::-webkit-outer-spin-button {
          -webkit-appearance: none;
          margin: 0;
        }
      }
    }

    domain-activity-log {
      > domain-activity-picker { display: none; }
    }
  }

  actor-sheet {
    h3 {
      display: flex;
      background-color: black;
      color: white;
      padding: var(--internal-margin);

      .badge {
        margin-left: auto;
      }
    }

    > article {
      border: 1px solid black;
      padding: var(--internal-margin);

      .powerups {
        li {
          border: 1px solid black;
          padding: var(--internal-margin);
        }
      }
    }
  }

  domain-activity-log {
    display: flex;
    flex-direction: column;
    gap: var(--external-margin);

    > .status-banner {
      font-size: var(--step-5);
      background-color: var(--color-event-bg);
      padding: var(--internal-margin);

      &:empty {
        display: none;
      }
    }

    > domain-activity-picker {
      > .activities-list {
        display: grid;
        align-items: flex-end;
        grid-template-columns: repeat(auto-fill, minmax(10em, 1fr));
        gap: var(--internal-margin);
        align-items: stretch;

        + h4 { margin-top: var(--external-margin) }
      }

      h4 {
        font-weight: 600;
      }

      > .leadership-activities {
        --button-bg: var(--color-leadership-bg);
      }

      > .civic-activities {
        --button-bg: var(--color-civic-bg);
      }

      > .end-turn {
        margin-top: var(--external-margin);
      }

      > .end-turn-pending {
        --button-bg: white;
      }
      
      > .end-turn-ready {
        --button-bg: green;
      }
    }

    .consumables {
      display: flex;
      flex-wrap: wrap;
      gap: var(--external-margin);

      font-size: var(--step--1);

      &:empty {
        &::before {
          content: "ðŸª¹ No consumables or statuses";
          opacity: 0.8;
        }
      }
    }

    > .entries {
      > .turn-marker {
        display: flex;
        background: linear-gradient(to bottom, transparent, transparent 45%, grey 50%, transparent 55%, transparent);
        justify-content: center;
        margin: calc(2 * var(--external-margin)) 0;

        > .turn-name {
          background: white;
          padding: var(--internal-margin);
        }
      }

      > .entry {
        --bg: grey;
        --outcome-bg: var(--bg);
        --description-bg: var(--subheader-bg);

        &[data-type="leadership"] { --bg: var(--color-leadership-bg); }
        &[data-type="civic"] { --bg: var(--color-civic-bg); }
        &.event { --bg: var(--color-event-bg) }

        &[data-outcome="critical-success"] { --outcome-bg: var(--color-critical-success-bg); }
        &[data-outcome="success"] { --outcome-bg: var(--color-success-bg); }
        &[data-outcome="failure"] { --outcome-bg: var(--color-failure-bg); }
        &[data-outcome="critical-failure"] { --outcome-bg: var(--color-critical-failure-bg); }

        border: 3px solid var(--bg);
        border-top-color: var(--outcome-bg);
        border-left-color: var(--outcome-bg);
        display: grid;
        grid-template-areas:
          "header     "
          "description"
          "body       ";

        &:has(> .icon) {
          grid-template-columns: 1fr 4rem;
          grid-template-areas:
            "header      icon"
            "description icon"
            "body        body";
        }

        > header {
          grid-area: header;
          display: flex;
          align-items: baseline;
          background: linear-gradient(140deg, var(--outcome-bg), var(--bg));
          border-bottom: 1px solid var(--bg);
          padding: var(--internal-margin);

          > small {
            font-size: var(--step--1);
            margin-left: var(--internal-margin);
            opacity: 0.8;;
          }
        }

        .cancel-activity {
          margin-left: auto;
        }
        &:has(.pick-ability input:checked, .outcome input:checked) .cancel-activity { display: none }

        &:has(.pick-ability input:checked) difficulty-class .mods {
          pointer-events: none;

          label:not(.base, :has(input:checked)), .other {
            --button-bg: white;
            --button-color: hsl(0, 0%, 60%);
            --button-border-color: hsl(0, 0%, 80%);
          }
        }

        > .icon {
          grid-area: icon;
          font-size: var(--step-5);
          background: var(--bg);
          padding: var(--internal-margin);
        }

        > .description {
          grid-area: description;
          background: var(--description-bg);
          border-bottom: 1px solid var(--description-bg);
          padding: var(--internal-margin);
          font-size: var(--step--1);
        }

        > .body {
          grid-area: body;
          padding: var(--internal-margin);

          h1, h2, h3, h4, h5, h6 {
            background: var(--description-bg);
            border-bottom: 1px solid var(--description-bg);
            padding: var(--internal-margin);
            margin: var(--external-margin) calc(-1 * var(--internal-margin));
            font-size: var(--step--1);
          }
        }

        .pick-ability {
          .modifier {
            margin-left: var(--internal-margin);
          }

          .modifier-breakdown {
            padding-top: var(--internal-margin);
            font-size: var(--step--2);

            &:empty { display: none }
          }
        }

        + .entry {
          margin-top: var(--external-margin);
        }
      }
    }
  }

  structure-description {
    display: grid;
    gap: var(--internal-margin);
    grid-template-columns: 1fr auto;
    grid-template-areas:
      "name        name"
      "traits      level"
      "description description"
      "bonuses     bonuses"
      "effects     effects";
    
      font-weight: 400;
    
    > .name {
      grid-area: name;
      font-weight: 600;
    }

    > .level {
      grid-area: level;
      font-size: var(--step--1);
    }
    > .traits {
      grid-area: traits;
      display: flex;
      flex-wrap: wrap;
      gap: var(--internal-margin);

      &:empty { display: none }
    }

    > .description {
      grid-area: description;

      &:empty { display: none }
    }
    > .bonuses {
      grid-area: bonuses;

      &:empty { display: none }
    }

    > .effects {
      grid-area: effects;

      &:empty { display: none }

      &:before {
        content: "Effects: ";
        font-weight: 600;
      }
    }
  }

  .diff {
    margin-left: var(--internal-margin);
    &::before { content: "("}
    &::after { content: ")"}

    &.diff-negative { color: red }
    &.diff-positive { color: green }
  }

  .entries-summary {
    display: flex;
    flex-wrap: wrap;
  }

  .entry-summary {
    --bg: lightgray;
    --outcome-bg: var(--bg);
    --type-bg: var(--bg);

    padding: var(--internal-margin);
    background:  var(--bg);
    border-top: var(--internal-margin) solid var(--outcome-bg);
    border-bottom: var(--internal-margin) solid var(--type-bg);

    &[data-outcome="critical-success"] { --outcome-bg: var(--color-critical-success-bg); }
    &[data-outcome="success"] { --outcome-bg: var(--color-success-bg); }
    &[data-outcome="failure"] { --outcome-bg: var(--color-failure-bg); }
    &[data-outcome="critical-failure"] { --outcome-bg: var(--color-critical-failure-bg); }

    &[data-type="leadership"] { --type-bg: var(--color-leadership-bg); }
    &[data-type="civic"] { --type-bg: var(--color-civic-bg); }
  }

  button .modifier {
    padding-left: var(--internal-margin);
    opacity: .6;
  }

  .consumable {
    --_consumable-bg: yellow;
    --_consumable-color: black;
    --_consumable-border-color: var(--consumable-color, var(--_consumable-color));

    color: var(--consumable-color, var(--_consumable-color));
    border: 1px solid var(--consumable-border-color, var(--_consumable-border-color));
    background: var(--consumable-bg, var(--_consumable-bg));
    padding: var(--internal-margin);

    &[data-use-by="end-of-turn"] {
      border-style: dashed;
    }

    .description {
      font-size: var(--step--1);
      margin-top: var(--internal-margin);
    }
  }

  .pickable-group {
    --min-item-width: 10em;

    margin: var(--external-margin) 0;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(var(--min-item-width), 1fr));

    &.pick-structure { --min-item-width: 15em }

    :is(label.pickable) {
      &:has(input:checked), &:hover {
        --button-bg: var(--color-selected-bg);
      }
    }

    label.pickable + label.pickable {
      border-left-width: 0;
    }

    &:not(.repickable):has(input:checked) {
      .pickable {
        pointer-events: none;
      }

      .pickable:not(:has(input:checked)) {
        --button-bg: white;
        --button-color: hsl(0, 0%, 60%);
        --button-border-color: hsl(0, 0%, 80%);
      }
    }
  }

  difficulty-class {
    display: flex;
    align-items: center;

    output {
      font-weight: 600;
      padding: var(--internal-margin);
    }

    .mods {
      display: flex;
      flex-wrap: wrap;
      align-items: stretch;

      label + label {
        border-left-width: 0;
      }
    }

    label.base, label:has(input:checked), label:hover {
      --button-bg: var(--color-selected-bg);
    }

    .other {
      --button-bg: hsl(0, 0%, 80%);
      --button-color: black;
      --button-border-color: black;

      display: flex;
      align-items: center;
      gap: var(--internal-margin);
      border: 1px solid var(--button-border-color);
      border-left-width: 0;
      background-color: var(--button-bg);
      color: var(--button-border-color);
      padding: .2rem var(--internal-margin);
      font-size: var(--step-0);
      font-weight: 600;

      input {
        max-width: 7ch;
        border: none;
      }
    }
  }

  .outcome {
    .pickable-group &:has(input:checked), &:hover {
      &.outcome-critical-success { --button-bg: var(--color-critical-success-bg); }
      &.outcome-success { --button-bg: var(--color-success-bg); }
      &.outcome-failure { --button-bg: var(--color-failure-bg); }
      &.outcome-critical-failure { --button-bg: var(--color-critical-failure-bg); }
    }
  }

  .badge {
    display: flex;
    align-items: center;
    gap: var(--small-margin);
    background: white;
    color: black;
    font-size: var(--step--2);
    border: 1px solid black;
    border-radius: var(--internal-margin);
    padding: 0 var(--internal-margin);

    a {
      text-decoration: none;
    }
  }
}
